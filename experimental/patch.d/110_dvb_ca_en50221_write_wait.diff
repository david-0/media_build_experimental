--- linux/drivers/media/dvb-core/dvb_ca_en50221_mutex.c	2013-01-07 05:45:57.000000000 +0100
+++ linux/drivers/media/dvb-core/dvb_ca_en50221.c	2013-01-31 02:49:45.000000000 +0100
@@ -42,10 +42,14 @@
 #include "dvb_ringbuffer.h"
 
 static int dvb_ca_en50221_debug;
+static int dvb_ca_en50221_write_wait;
 
 module_param_named(cam_debug, dvb_ca_en50221_debug, int, 0644);
 MODULE_PARM_DESC(cam_debug, "enable verbose debug messages");
 
+module_param_named(cam_write_wait, dvb_ca_en50221_write_wait, int, 0644);
+MODULE_PARM_DESC(cam_write_wait, "wait time before writing to CAM (milliseconds)");
+
 #define dprintk if (dvb_ca_en50221_debug) printk
 
 #define INIT_TIMEOUT_SECS 10
@@ -740,6 +744,15 @@
 						 IRQEN | CMDREG_HC)) != 0)
 		goto exit;
 
+	/* Depending on the CA interface, it may take some time to get the real
+	 * state from the CAM (e.g: i2c bus). For single buffer CAMs it is
+	 * important to stop a write cycle, when a read cycle is already
+	 * requested. Waiting a little bit, will give the CA interface and the
+	 * CAM the necessary time.
+	 */
+	if (dvb_ca_en50221_write_wait)
+		msleep(dvb_ca_en50221_write_wait);
+
 	/* check if interface is still free */
 	if ((status = ca->pub->read_cam_control(ca->pub, slot, CTRLIF_STATUS)) < 0)
 		goto exit;
@@ -748,6 +761,18 @@
 		status = -EAGAIN;
 		goto exit;
 	}
+	if (status & (STATUSREG_DA | STATUSREG_RE)) {
+		if (status & STATUSREG_DA)
+			dvb_ca_en50221_thread_wakeup(ca);
+
+		/* We print this here to give a hint, if the CAM is not working.
+		 * Use module parameter cam_write_wait.
+		 */
+		dprintk("dvb_ca adapter %d: CAM read race condition!\n",
+			ca->dvbdev->adapter->num);
+		status = -EAGAIN;
+		goto exit;
+	}
 
 	/* send the amount of data */
 	if ((status = ca->pub->write_cam_control(ca->pub, slot, CTRLIF_SIZE_HIGH, bytes_write >> 8)) != 0)
