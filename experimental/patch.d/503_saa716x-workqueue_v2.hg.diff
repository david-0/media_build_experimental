# HG changeset patch
# User Soeren Moch
# Date 1343928415 -7200
# Node ID 43cfee23747666ae9d4e157bf298d928499257dd
# Parent  4af43518686743e1946ea9ee7a4ff7eff0064bfd
run fifo_worker in work_queue, not as tasklet, to avoid heavy (soft-)interrupt load on slow CPUs

diff -r 4af435186867 -r 43cfee237476 linux/drivers/media/common/saa716x/saa716x_ff.h
--- a/linux/drivers/media/common/saa716x/saa716x_ff.h	Thu Aug 02 17:54:12 2012 +0200
+++ b/linux/drivers/media/common/saa716x/saa716x_ff.h	Thu Aug 02 19:26:55 2012 +0200
@@ -4,6 +4,7 @@
 #include "dvb_filter.h"
 #include "dvb_ringbuffer.h"
 #include <linux/version.h>
+#include <linux/workqueue.h>
 
 #define TECHNOTREND			0x13c2
 #define S2_6400_DUAL_S2_PREMIUM_DEVEL	0x3009
@@ -103,7 +104,8 @@
 	struct dvb_ringbuffer	tsout;   /* buffer for TS output */
 	u8			*tsbuf;  /* temp ts buffer */
 
-	struct tasklet_struct	fifo_tasklet;
+	struct workqueue_struct *fifo_workq;
+	struct work_struct	fifo_work;
 
 	wait_queue_head_t	boot_finish_wq;
 	int			boot_finished;
diff -r 4af435186867 -r 43cfee237476 linux/drivers/media/common/saa716x/saa716x_ff_main.c
--- a/linux/drivers/media/common/saa716x/saa716x_ff_main.c	Thu Aug 02 17:54:12 2012 +0200
+++ b/linux/drivers/media/common/saa716x/saa716x_ff_main.c	Thu Aug 02 19:26:55 2012 +0200
@@ -492,10 +492,10 @@
 	return 0;
 }
 
-static void fifo_worker(unsigned long data)
+static void fifo_worker(struct work_struct *work)
 {
-	struct saa716x_dev *saa716x = (struct saa716x_dev *) data;
-	struct sti7109_dev *sti7109 = saa716x->priv;
+        struct sti7109_dev *sti7109 = container_of(work, struct sti7109_dev, fifo_work);
+	struct saa716x_dev *saa716x = sti7109->dev;
 	u32 fifoCtrl;
 	u32 fifoStat;
 	u16 fifoSize;
@@ -677,7 +677,8 @@
 {
 	struct sti7109_dev *sti7109 = saa716x->priv;
 
-	tasklet_kill(&sti7109->fifo_tasklet);
+	cancel_work_sync(&sti7109->fifo_work);
+	destroy_workqueue(sti7109->fifo_workq);
 	dvb_unregister_device(sti7109->video_dev);
 	return 0;
 }
@@ -696,8 +697,8 @@
 			    sti7109,
 			    DVB_DEVICE_VIDEO);
 
-	tasklet_init(&sti7109->fifo_tasklet, fifo_worker,
-		     (unsigned long)saa716x);
+	sti7109->fifo_workq = create_singlethread_workqueue("saa716x_fifo_wq");
+	INIT_WORK(&sti7109->fifo_work, fifo_worker);
 
 	return 0;
 }
@@ -1325,7 +1326,7 @@
 			fifoCtrl = SAA716x_EPRD(PHI_1, FPGA_ADDR_FIFO_CTRL);
 			fifoCtrl &= ~0x4;
 			SAA716x_EPWR(PHI_1, FPGA_ADDR_FIFO_CTRL, fifoCtrl);
-			tasklet_schedule(&sti7109->fifo_tasklet);
+			queue_work(sti7109->fifo_workq, &sti7109->fifo_work);
 			phiISR &= ~ISR_FIFO1_EMPTY_MASK;
 		}
 
