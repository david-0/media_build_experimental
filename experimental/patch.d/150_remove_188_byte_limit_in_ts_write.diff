diff --git a/pci/ddbridge/ddbridge-core.c b/pci/ddbridge/ddbridge-core.c
index 7b329fc..1f193ae 100644
--- linux/drivers/media/pci/ddbridge/ddbridge-core.c.old
+++ linux/drivers/media/pci/ddbridge/ddbridge-core.c
@@ -651,8 +651,9 @@ static u32 ddb_input_avail(struct ddb_input *input)
 		ddbwritel(dev, stat, DMA_BUFFER_ACK(input->dma->nr));
 		return 0;
 	}
-	if (input->dma->cbuf != idx || off < input->dma->coff)
-		return 188;
+
+	if (input->dma->cbuf != idx)
+		return input->dma->size - input->dma->coff;
 	return 0;
 }
 
@@ -724,7 +725,7 @@ static ssize_t ts_write(struct file *file, const char *buf,
 		buf += stat;
 		left -= stat;
 	}
-	return (left == count) ? -EAGAIN : (count - left);
+	return count && (left == count) ? -EAGAIN : (count - left);
 }
 
 static ssize_t ts_read(struct file *file, char *buf,
@@ -734,12 +735,11 @@ static ssize_t ts_read(struct file *file, char *buf,
 	struct ddb_output *output = dvbdev->priv;
 	struct ddb_input *input = output->port->input[0];
 	struct ddb *dev = output->port->dev;
-	int left, read;
+	size_t left = count;
+	int stat;
 
 	if (!dev->has_dma)
 		return -EINVAL;
-	count -= count % 188;
-	left = count;
 	while (left) {
 		if (ddb_input_avail(input) < 188) {
 			if (file->f_flags & O_NONBLOCK)
@@ -749,11 +749,13 @@ static ssize_t ts_read(struct file *file, char *buf,
 				    ddb_input_avail(input) >= 188) < 0)
 				break;
 		}
-		read = ddb_input_read(input, buf, left);
-		left -= read;
-		buf += read;
+		stat = ddb_input_read(input, buf, left);
+		if (stat < 0)
+			return stat;
+		left -= stat;
+		buf += stat;
 	}
-	return (left == count) ? -EAGAIN : (count - left);
+	return count && (left == count) ? -EAGAIN : (count - left);
 }
 
 static unsigned int ts_poll(struct file *file, poll_table *wait)
diff --git a/dvb-core/dvb_ca_en50221.c b/dvb-core/dvb_ca_en50221.c
index 05de81d..83331f0 100644
--- linux/drivers/media/dvb-core/dvb_ca_en50221.c.old
+++ linux/drivers/media/dvb-core/dvb_ca_en50221.c
@@ -763,7 +763,7 @@ static int dvb_ca_en50221_write_data(struct dvb_ca_private *ca, int slot, u8 * b
 		status = -EAGAIN;
 		goto exit;
 	}
-
+#if 0
 	/* It may need some time for the CAM to settle down, or there might be a
 	   race condition between the CAM, writing HC and our last check for DA.
 	   This happens, if the CAM asserts DA, just after checking DA before we
@@ -781,7 +781,7 @@ static int dvb_ca_en50221_write_data(struct dvb_ca_private *ca, int slot, u8 * b
 		status = -EAGAIN;
 		goto exit;
 	}
-
+#endif
 	/* send the amount of data */
 	if ((status = ca->pub->write_cam_control(ca->pub, slot, CTRLIF_SIZE_HIGH, bytes_write >> 8)) != 0)
 		goto exit;
diff --git a/frontends/cxd2099.c b/frontends/cxd2099.c
index 9bcd9b2..eaa223a 100644
--- linux/drivers/staging/media/cxd2099/cxd2099.c.old
+++ linux/drivers/staging/media/cxd2099/cxd2099.c
@@ -36,7 +36,7 @@
 
 #include "cxd2099.h"
 
-/*#define BUFFER_MODE 1*/
+#define BUFFER_MODE 1
 
 #define MAX_BUFFER_SIZE 248
 
